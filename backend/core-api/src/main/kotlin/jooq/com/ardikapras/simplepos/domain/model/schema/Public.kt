/*
 * This file is generated by jOOQ.
 */
package com.ardikapras.simplepos.domain.model.schema


import com.ardikapras.simplepos.domain.model.schema.tables.Customers
import com.ardikapras.simplepos.domain.model.schema.tables.OrderItems
import com.ardikapras.simplepos.domain.model.schema.tables.Orders
import com.ardikapras.simplepos.domain.model.schema.tables.Products
import com.ardikapras.simplepos.domain.model.schema.tables.Users

import kotlin.collections.List

import org.jooq.Catalog
import org.jooq.Table
import org.jooq.impl.SchemaImpl


/**
 * This class is generated by jOOQ.
 */
@Suppress("UNCHECKED_CAST")
open class Public : SchemaImpl("public", DefaultCatalog.DEFAULT_CATALOG) {
    public companion object {

        /**
         * The reference instance of <code>public</code>
         */
        val PUBLIC: Public = Public()
    }

    /**
     * The table <code>public.customers</code>.
     */
    val CUSTOMERS: Customers get() = Customers.CUSTOMERS

    /**
     * The table <code>public.order_items</code>.
     */
    val ORDER_ITEMS: OrderItems get() = OrderItems.ORDER_ITEMS

    /**
     * The table <code>public.orders</code>.
     */
    val ORDERS: Orders get() = Orders.ORDERS

    /**
     * The table <code>public.products</code>.
     */
    val PRODUCTS: Products get() = Products.PRODUCTS

    /**
     * The table <code>public.users</code>.
     */
    val USERS: Users get() = Users.USERS

    override fun getCatalog(): Catalog = DefaultCatalog.DEFAULT_CATALOG

    override fun getTables(): List<Table<*>> = listOf(
        Customers.CUSTOMERS,
        OrderItems.ORDER_ITEMS,
        Orders.ORDERS,
        Products.PRODUCTS,
        Users.USERS
    )
}
